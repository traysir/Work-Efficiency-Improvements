import pyautogui
import time
import keyboard
import logging
import json

# Initialize logging
logging.basicConfig(level=logging.INFO)

def load_config(config_path):
    with open(config_path, 'r') as file:
        return json.load(file)

def wait_for_element(image, timeout=10):
    start_time = time.time()
    while time.time() - start_time < timeout:
        if pyautogui.locateOnScreen(image):
            return True
        time.sleep(0.5)
    return False

def check_checkbox(x, y):
    pyautogui.click(x, y)

def automate_olafs(username_coordinates, password, filter_coordinates):
    try:
        keyboard.press_and_release('win')
        time.sleep(1.5)

        keyboard.write('olafs')
        time.sleep(1.5)
        keyboard.press_and_release('enter')

        if wait_for_element('login_page.png'):  # Replace with a screenshot of the login page
            pyautogui.click(username_coordinates[0], username_coordinates[1])
            pyautogui.write(password)
            keyboard.press_and_release('enter')

            if wait_for_element('main_page.png'):  # Replace with a screenshot of the main page
                # Remaining automation steps
                pass

    except Exception as e:
        logging.error(f"Error in automate_olafs: {e}")

def run_application(tracking_numbers, text_box_x, text_box_y, checkbox_x, checkbox_y):
    for number in tracking_numbers:
        try:
            if number:
                pyautogui.click(text_box_x, text_box_y)
                pyautogui.write(number)
                check_checkbox(checkbox_x, checkbox_y)
                pyautogui.click(text_box_x, text_box_y)
                pyautogui.hotkey('ctrl', 'a')
                pyautogui.press('delete')
                time.sleep(0.5)
        except Exception as e:
            logging.error(f"Error in run_application with number {number}: {e}")

if __name__ == "__main__":
    config = load_config('config.json')
    automate_olafs(config['username_coordinates'], config['password'], config['filter_coordinates'])
    run_application(config['tracking_numbers'], config['text_box_x'], config['text_box_y'], config['checkbox_x'], config['checkbox_y'])




# JSON FILE HERE: 

{
    "username_coordinates": [672, 413],
    "password": "Rolltid322!!",
    "filter_coordinates": [615, 320],
    "date_coordinates": [1201, 339],
    "text_box_x": 171,
    "text_box_y": 477,
    "checkbox_x": 53,
    "checkbox_y": 549,
    "tracking_numbers": [
        "6284",
        "3805",
        "6401",
        "4014",
        "0716",
        "7988",
        "6445",
        "0207",
        "4493",
        "5564",
        "2615",
        "0749",
        "1958",
        "1980"
    ]
}


